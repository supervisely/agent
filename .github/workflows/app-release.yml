name: supervisely-app-release
run-name: Supervisely ${{ github.repository }} app release
on:
  workflow_call:
    inputs:
      SUPERVISELY_SERVER_ADDRESS:
        required: true
        type: string
      SUPERVISELY_PROD_SERVER_ADDRESS:
        required: true
        type: string
      RELEASE_VERSION:
        required: true
        type: string
      RELEASE_DESCRIPTION:
        required: true
        type: string
    secrets:
      SUPERVISELY_DEV_API_TOKEN:
        required: true
      SUPERVISELY_PRIVATE_DEV_API_TOKEN:
        required: true
      SUPERVISELY_PROD_API_TOKEN:
        required: true
      GH_ACCESS_TOKEN:
        required: true

permissions:
  contents: write
  actions: write

jobs:
  Update-App-Config:
    runs-on: ubuntu-latest
    outputs:
      RELEASE_TYPE: ${{ steps.update_app_config.outputs.RELEASE_TYPE }}
      COMMIT_HASH: ${{ steps.update_app_config.outputs.COMMIT_HASH }}
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          ref: master
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.8
      - name: Update App Config
        env:
          GITHUB_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
        id: update_app_config
        run: |
          VERSION="${{ inputs.RELEASE_VERSION }}"
          if [[ $VERSION == v* ]]; then
            VERSION="${VERSION:1}"
          fi
          echo "DOCKER_IMAGE=$VERSION" >> $GITHUB_ENV
          
          SEMVER_REGEX="^[0-9]+\.[0-9]+\.[0-9]+$"
          if [[ ! $VERSION =~ $SEMVER_REGEX ]]; then
          RELEASE_TYPE="release-branch"
          else
          RELEASE_TYPE="release"
          fi
          echo "RELEASE_TYPE=$RELEASE_TYPE" >> $GITHUB_OUTPUT
          echo "RELEASE_TYPE=$RELEASE_TYPE"
          
          python app/update_config.py $VERSION

          git add app/config.json
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git config --global user.name "${{ vars.SUPERVISELY_GIT_USERNAME }}"
            git config --global user.email "${{ vars.SUPERVISELY_GIT_EMAIL }}"
            git commit -m "Update config for release $VERSION"
            git push
            COMMIT_HASH=$(git rev-parse HEAD)
            echo "COMMIT_HASH=$COMMIT_HASH" >> $GITHUB_OUTPUT
          fi

  Supervisely-Release:
    needs: Update-App-Config
    uses: supervisely-ecosystem/workflows/.github/workflows/common.yml@master
    secrets:
      SUPERVISELY_DEV_API_TOKEN: "${{ secrets.SUPERVISELY_DEV_API_TOKEN }}"
      SUPERVISELY_PRIVATE_DEV_API_TOKEN: "${{ secrets.SUPERVISELY_PRIVATE_DEV_API_TOKEN }}"
      SUPERVISELY_PROD_API_TOKEN: "${{ secrets.SUPERVISELY_PROD_API_TOKEN }}"
      GH_ACCESS_TOKEN: "${{ secrets.GH_ACCESS_TOKEN }}"
    with:
      SUPERVISELY_SERVER_ADDRESS: "${{ inputs.SUPERVISELY_SERVER_ADDRESS }}"
      SUPERVISELY_PROD_SERVER_ADDRESS: "${{ inputs.SUPERVISELY_PROD_SERVER_ADDRESS }}"
      SLUG: "supervisely-ecosystem/agent"
      RELEASE_VERSION: "${{ inputs.RELEASE_VERSION }}"
      RELEASE_DESCRIPTION: "${{ inputs.RELEASE_DESCRIPTION }}"
      RELEASE_TYPE: "${{ needs.Update-App-Config.outputs.RELEASE_TYPE }}"
      SUBAPP_PATHS: "app"
      SKIP_INSTANCE_VERSION_VALIDATION: true
      SKIP_IMAGE_VALIDATION: true
      ARCHIVE_ONLY_CONFIG: true
      COMMIT_SHA: "master"
