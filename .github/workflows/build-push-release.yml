name: build-push-release

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: true
          docker-images: true
          swap-storage: true

      - name: Checkout
        uses: actions/checkout@v4

      - name: Echo ${{ github.event.release.tag_name }}
        run: echo ${{ github.event.release.tag_name }}

      - name: Write version to ENV variable
        run: |
            TAG_NAME=${{ github.event.release.tag_name }}
            echo "LABEL_VERSION=${TAG_NAME:1}" >> $GITHUB_ENV

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME_COMMUNITY }}
          password: ${{ secrets.DOCKER_TOKEN_COMMUNITY }}

      - name: Login to Docker Supervisely Enterprise
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.DOCKER_ENTERPRISE_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME_ENTERPRISE }}
          password: ${{ secrets.DOCKER_PASSWORD_ENTERPRISE }}

      # - name: Login to Docker Supervisely Developer
      #   uses: docker/login-action@v3
      #   with:
      #     registry: ${{ secrets.DOCKER_DEVELOPER_REGISTRY }}
      #     username: ${{ secrets.DOCKER_USERNAME_DEVELOPER }}
      #     password: ${{ secrets.DOCKER_PASSWORD_DEVELOPER }}

      - name: Get Docker Labels from python script
        run: python .github/workflows/docker_labels.py

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: v0.9.1

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./Dockerfile
          provenance: false
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: |
            supervisely/agent:${{ env.LABEL_VERSION }}
            ${{ secrets.DOCKER_ENTERPRISE_REGISTRY }}/rc2/agent:${{ env.LABEL_VERSION }}
          # supervisely/agent:dev
          # ${{ secrets.DOCKER_ENTERPRISE_REGISTRY }}/rc2/agent:dev
          build-args: |
            LABEL_VERSION=agent:${{ env.LABEL_VERSION }}
            LABEL_INFO=${{ env.LABEL_INFO }}
            LABEL_MODES=${{ env.LABEL_MODES }}
            LABEL_README=${{ env.LABEL_README }}
            LABEL_BUILT_AT=${{ env.LABEL_BUILT_AT }}
          cache-from: type=registry,ref=supervisely/agent:cache
          cache-to: type=registry,ref=supervisely/agent:cache,mode=max
          # cache-from: type=gha
          # cache-to: type=gha,mode=max
      
      - name: Release App
        uses: .github/workflows/app-release
        with:
          SUPERVISELY_DEV_API_TOKEN: "${{ secrets.SUPERVISELY_DEV_API_TOKEN }}"
          SUPERVISELY_PRIVATE_DEV_API_TOKEN: "${{ secrets.SUPERVISELY_PRIVATE_DEV_API_TOKEN }}"
          SUPERVISELY_PROD_API_TOKEN: "${{ secrets.SUPERVISELY_PROD_API_TOKEN }}"
          GH_ACCESS_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          SUPERVISELY_SERVER_ADDRESS: "${{ vars.SUPERVISELY_DEV_SERVER_ADDRESS }}"
          SUPERVISELY_PROD_SERVER_ADDRESS: "${{ vars.SUPERVISELY_PROD_SERVER_ADDRESS }}"
          SLUG: "${{ github.repository }}"
          RELEASE_VERSION: "${{ github.event.release.tag_name }}"
          RELEASE_DESCRIPTION: "${{ github.event.release.name }}"
          RELEASE_TYPE: "release"
          SKIP_INSTANCE_VERSION_VALIDATION: "true"
          SKIP_IMAGE_VALIDATION: "true"
          SUBAPP_PATHS: ".github/workflows/agent_app"
